{"version":3,"sources":["Graph.js","firestore.js","Projects.js","App.js","Nav.js","RechartsGraph.js","reportWebVitals.js","Footer.js","Screener.js","ProjectPage.js","routes.js","index.js"],"names":["grid","cols","rows","Cell","health","genome","type","this","Cake","size","addCake","count","i","length","j","cake","Math","random","console","log","make3DArray","arr","Array","countNeighbors","x","y","sum","row","consume","cellx","celly","hunt","p5","col","fill","stroke","rect","resolution","oldCount","elementCount","height","floor","window","innerHeight","cakeCount","clientW","props","className","setup","canvasParentRef","dimensions","innerWidth","round","createCanvas","parent","width","newCell","draw","background","next","state","neighbors","countElements","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firestore","useStyles","makeStyles","theme","root","flexGrow","paper","control","padding","spacing","Projects","React","useState","cardStyles","backgroundColor","minWidth","maxWidth","classes","projects","setProjects","projects2","setProjects2","error","useEffect","mounted","mounted2","collection","get","then","response","fetchedProjects","docs","forEach","document","fetchedProject","id","data","push","response2","fetchedProjects2","document2","fetchedProject2","Grid","container","direction","justify","alignItems","item","xs","md","sm","map","project","to","style","textDecoration","Card","elevation","CardMedia","component","alt","image","img","title","CardContent","name","project2","Greeting","querySelector","Graph","Component","menuButton","marginRight","Nav","AppBar","position","Toolbar","IconButton","edge","color","aria-label","href","z","margin","top","right","bottom","left","dataKey","unit","range","cursor","strokeDasharray","shape","PureComponent","jsfiddleUrl","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","ProjectPage","Child","setTitle","setImg","desc","setDesc","tech","setTech","date","setDate","endDate","setEndDate","employer","setEmployer","db","useParams","doc","description","technologies","startDate","src","key","value","Routes","exact","path","App","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.7f80b7a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Plot from 'react-plotly.js'\nimport Sketch from \"react-p5\";\nimport './index.css';\nimport { react } from \"plotly.js\";\nimport { FilledInput } from \"@material-ui/core\";\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip\n} from 'recharts';\n\n\nclass Cell {\n    constructor(health, genome, type) {\n        this.type = type;\n        this.health = health;\n        this.genome = genome;\n\n    }\n}\nclass Cake {\n    constructor(size, health, type) {\n        this.type = type;\n        this.size = size;\n        this.health = health;\n    }\n\n}\n\nfunction addCake(grid) {\n    let count = 0;\n    for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[0].length; j++) {\n            let cake = new Cake(1, 1, \"food\");\n            if (Math.random() < .05) {\n                grid[i][j] = cake;\n                count += 1;\n\n            }\n        }\n    }\n    console.log(\"returning \" + count + \"cakes\");\n\n    return count;\n}\n\nfunction make3DArray(cols, rows) {\n    let arr = new Array(cols);\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = new Array(rows);\n    }\n    return arr;\n}\nfunction getDimensions() {\n    height = window.innerHeight;\n    width = window.innerWidth;\n    return [width, height]\n}\nfunction countNeighbors(grid, x, y) {\n    let sum = 0;\n    for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n            let col = (x + i + cols) % cols;\n            let row = (y + j + rows) % rows;\n            sum += grid[col][row].health;\n        }\n    }\n    sum -= grid[x][y].health;\n    return sum;\n}\nfunction consume(grid, x, y, cellx, celly) {\n    if (grid[cellx][celly].type != 'cell') { return false; }\n    else {\n        if ((grid[x][y].size >= grid[cellx][celly].genome)) {\n            // console.log(\"food too big\");\n            return false;\n        }\n        else {\n            // console.log('eats food ' + grid[x][y].size + \" > \" + grid[cellx][celly].genome);\n            // console.log('eats food ' + grid[x][y].type + \" vs \" + grid[cellx][celly].type);\n            return true;\n        }\n\n    }\n}\nfunction delay(i) {\n    setTimeout(function () {\n        // Add tasks to do \n    }, 2000 * i);\n}\nfunction hunt(grid, x, y, p5) {\n    let count = 0;\n    for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n            let col = (x + i + cols) % cols;\n            let row = (y + j + rows) % rows;\n\n            if (grid[col][row].type == \"food\") {\n                if (consume(grid, col, row, x, y)) {\n                    grid[col][row] = new Cell(0, 1, \"food\");\n                    p5.fill('blue');\n                    p5.stroke(0);\n                    p5.rect(col * resolution, row * resolution, resolution - 1, resolution - 1);\n                    count += 1;\n\n                }\n            }\n        }\n    }\n    return count;\n\n}\nfunction countElements(grid) {\n    let sum = 0;\n    for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[0].length; j++) {\n            sum += grid[i][j].health;\n        }\n    }\n    return sum;\n}\n\nlet liveGrid;\nlet grid;\nlet cols;\nlet rows;\nlet oldCount = 0;\nlet elementCount = 0;\nlet resolution = 10;\nlet height = Math.floor(window.innerHeight);\nlet width = Math.floor(window.clientW);\nlet cakeCount = 0;\n\nexport default (props) => {\n    const setup = (p5, canvasParentRef) => {\n        let dimensions = getDimensions();\n        console.log(\"dimensions are width: \" + Math.round(dimensions[0] / 10) * 10 + \" height: \" + Math.round(dimensions[1] / 10) * 10)\n        console.log(\"height \" + Math.round(dimensions[1]));\n        p5.createCanvas(1920, 900).parent(canvasParentRef);\n        cols = p5.width / resolution;\n        rows = p5.height / resolution;\n        grid = make3DArray(cols, rows);\n\n        for (let i = 0; i < cols; i++) {\n            for (let j = 0; j < rows; j++) {\n                let newCell = new Cell(Math.round(Math.random()), 1, \"cell\")\n                grid[i][j] = newCell;\n            }\n        }\n        cakeCount = addCake(grid);\n        console.log(\"done adding cake with \" + cakeCount + \" cakes\");\n    };\n\n\n    const draw = (p5) => {\n        p5.background(0);\n        for (let i = 0; i < cols; i++) {\n            for (let j = 0; j < rows; j++) {\n                let x = i * resolution;\n                let y = j * resolution;\n                if (grid[i][j].health == 1 && grid[i][j].type == \"cell\") {\n                    p5.fill(160); // changed for aesthetics\n                    p5.stroke(0);\n                    p5.rect(x, y, resolution - 1, resolution - 1);\n                }\n                else if (grid[i][j].type == \"food\") {\n                    p5.fill('#fae');\n                    p5.stroke(0);\n                    p5.rect(x, y, resolution - 1, resolution - 1);\n                }\n            }\n        }\n\n\n        let next = make3DArray(cols, rows);\n        // let txt = p5.createDiv(\"testing \" + cakeCount);\n\n        // Compute next based on grid\n        for (let i = 0; i < cols; i++) {\n            for (let j = 0; j < rows; j++) {\n                next[i][j] = new Cell(null, 1, \"cell\");\n                let state = grid[i][j];\n                // Count live neighbors!\n                let sum = 0;\n                let neighbors = countNeighbors(grid, i, j);\n                cakeCount -= hunt(grid, i, j, p5);\n\n\n\n                // txt.position(1600, 50);\n                // console.log(cakeCount);\n                if (state.type == \"cell\") {\n                    if (state.health == 0 && neighbors == 3) { //birth\n                        next[i][j].health = 1;\n                        next[i][j].genome = (Math.random() < .004) ? next[i][j].genome + 0.1 : 1;\n                    } else if (state.health < 0 || (neighbors < 2 || neighbors > 3)) { //death\n                        next[i][j].health = 0;\n                    }\n                    else {\n                        next[i][j] = state;\n                        // next[i][j].health = next[i][j].health-.000000001;\n                    }\n                    // next[i][j].health = next[i][j].health-.000000001;\n                }\n                else {\n                    next[i][j] = state;\n                }\n            }\n\n        }\n\n        grid = next;\n\n\n\n\n        oldCount = elementCount;\n        elementCount = countElements(grid, cols, rows);\n\n\n        if (elementCount == oldCount && (elementCount < 1200)) {\n            grid = make3DArray(cols, rows);\n\n\n            for (let i = 0; i < cols; i++) {\n                for (let j = 0; j < rows; j++) {\n                    let newCell = new Cell(Math.round(Math.random()), -1, \"cell\");\n                    grid[i][j] = newCell;\n                }\n            }\n            cakeCount = addCake(grid);\n\n        }\n\n    };\n\n    const data = [\n        { x: 100, y: 200, z: 200 },\n        { x: 120, y: 100, z: 200 },\n        { x: 170, y: 300, z: 200 },\n        { x: 140, y: 250, z: 200 },\n        { x: 150, y: 400, z: 200 },\n        { x: 110, y: 280, z: 200 },\n    ];\n\n    return (<>\n        <div className=\"ca-container\">\n        \n            <Sketch className=\"ca-box\" setup={setup} draw={draw} />\n            {/* <div className=\"fading-container\">\n            </div> */}\n            \n        </div>\n        {/* <ScatterChart\n        width={400}\n        height={400}\n        margin={{\n          top: 20, right: 20, bottom: 20, left: 20,\n        }}\n      >\n        <CartesianGrid />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"sup ho\" unit=\"cm\" />\n        <YAxis type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" />\n        <ZAxis dataKey=\"z\" range={[64, 100]} name=\"score\" unit=\"km\" />\n        <Tooltip cursor={{ strokeDasharray: '9 3' }} />\n        <Scatter name=\"A school\" data={data} fill=\"#8884d8\" shape=\"square\"  />\n      </ScatterChart> */}\n    </>);\n};","import firebase from \"firebase\";\nconst config = {\n    \n        apiKey: \"AIzaSyC2U6CT4tLdac194IyJ2DkHYxDKPCZ5i_E\",\n        authDomain: \"personalsite-696e0.firebaseapp.com\",\n        projectId: \"personalsite-696e0\",\n        storageBucket: \"personalsite-696e0.appspot.com\",\n        messagingSenderId: \"1004235383971\",\n        appId: \"1:1004235383971:web:d7503dbaa752199ee2cb16\",\n        measurementId: \"G-ZL8L7NKX7M\"\n     \n};\nfirebase.initializeApp(config);\nexport default firebase;","import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport './Projects.css';\nimport firestore from \"./firestore\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Paper from '@material-ui/core/Paper';\nimport { colors } from \"@material-ui/core\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n    Link,\n    useRouteMatch,\n} from \"react-router-dom\";\nconst database = firebase.firestore();\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst Projects = () => {\n    const [spacing, setSpacing] = React.useState(2);\n    var cardStyles = { backgroundColor: \"#DEE0E3\", height: \"600x\", minWidth: \"40vw\", maxWidth:\"450px\" }\n    const classes = useStyles();\n    const [projects, setProjects] = useState([]);\n    const [projects2, setProjects2] = useState([]);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        let mounted = true;\n        let mounted2 = true;\n        database.collection('personalProjects').get()\n            .then(response => {\n\n                if(mounted){\n                    \n                \n                const fetchedProjects = [];\n\n\n\n                response.docs.forEach(document => {\n                    const fetchedProject = {\n                        id: document.id,\n                        ...document.data()\n                    };\n                    fetchedProjects.push(fetchedProject);\n                });\n                setProjects(fetchedProjects);\n                console.log(\"these are projects\" + setProjects);\n\n\n\n                database.collection('workProjects').get().then(response2 => {\n                    if(mounted2){\n                    const fetchedProjects2 = [];\n                    response2.docs.forEach(document2 => {\n\n                        const fetchedProject2 = {\n                            id: document2.id,\n                            ...document2.data()\n                        };\n                        console.log(\"this is doc2\" + fetchedProject2)\n                        fetchedProjects2.push(fetchedProject2);\n                    });\n                    setProjects2(fetchedProjects2);\n                    console.log(\"these are projects2\" + setProjects2);}\n                })\n\n    }});\n            return () => {mounted = false;\n                mounted2 = false;};\n    }, []);\n\n    return (\n\n        <>\n\n            <div className=\"projects-background\">\n\n                <Grid container className={classes.root}\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"center\"\n                    spacing={2}>\n\n                    <Grid container item xs={12} md={6} sm={12} className={classes.root} spacing={8} direction=\"column\"\n\n                        justify=\"space-evenly\"\n\n                        alignItems=\"center\"\n                    >\n\n                        <h1 className=\"personal-projects\">Personal Projects</h1>\n                        {error ? (\n                            <p>Oops, there is an error </p>\n                        ) : null}\n\n                        {projects.map(project => (<>\n\n                            <Grid item >\n                                <Link to={'/projects/personal/' + project.id} style={{ textDecoration: 'none' }}>\n                                    <Card id=\"personal-card\" className={classes.root} style={cardStyles} elevation={4}\n                                    >\n                                        <CardMedia\n\n                                            component=\"img\"\n                                            alt=\"Project Image\"\n                                            height=\"300\"\n                                            image={project.img}\n                                            title=\"Project Image\"\n                                        />\n                                        <CardContent\n                                        height = \"200px\">\n\n                                            <h2 ><strong>{project.name}</strong></h2>\n\n\n                                            {/* <h3>{project.date.startDate} - {project.date.endDate}</h3> \n                                        <ul >{project.description.map(bullet => (<li>{bullet}\n                                        </li>))}</ul>\n                                        {/* <ul>{project.technologies.map(technology => (\n                                            <p>{technology}</p>\n\n                                        ))}</ul> */}\n                                        </CardContent>\n                                    </Card>\n                                </Link>\n                            </Grid>\n\n                        </>\n                        ))}\n                    </Grid>\n\n                    <Grid container item xs={12} md={6} sm={12} className={classes.root} spacing={8} direction=\"column\"\n                        justify=\"space-evenly\"\n                        alignItems=\"center\">\n                        <h1 className=\"work-projects\">Work Projects</h1>\n                        {error ? (\n                            <p>Oops, there is an error </p>\n                        ) : null}\n                        {projects2.map(project2 => (<>\n                            <Grid item >\n                                <Link to={'/projects/work/' + project2.id} style={{ textDecoration: 'none' }}>\n\n                                    <Card id=\"work-card\" className={classes.root} style={cardStyles} elevation={4}>\n                                        <CardMedia\n                                            component=\"img\"\n                                            alt=\"Project Image\"\n                                            height=\"300\"\n                                            image={project2.img}\n                                            title=\"Project Image\"\n                                        />\n                                        <CardContent>\n                                            <h2><strong>{project2.title}</strong></h2>\n                                        </CardContent>\n                                    </Card>\n                                </Link>\n                            </Grid>\n                        </>\n                        ))}\n                    </Grid>\n                </Grid >\n            </div>\n        </>\n\n    );\n}\n\nexport default Projects;","import './App.css';\nimport './index.css';\nimport React, { Component } from \"react\";\nimport { init } from \"ityped\";\nimport Graph from './Graph';\nimport Projects from './Projects'\nexport default class Greeting extends Component {\n  componentDidMount() {\n    const myElement = document.querySelector(\"#myElement\");\n\n  }\n  render() {\n    return (\n      <>\n        {/* <NavigationContainer> */}\n        <div className=\"main-container\">\n          <Graph />\n\n          {/* <video autoPlay loop muted id=\"myVideo\">\n  <source src={backgroundVideo} type=\"video/mp4\"/> \n  Your browser does not support the video tag.\n\n  </video> */}\n          <div className=\"fading-container\"></div>\n          <div id=\"welcome-container\">\n            <h1 className=\"welcome-statement\">Hi, I'm Will!</h1>\n            <h3 className=\"welcome-bio\">Engineer, Developer, Entrepreneur</h3>\n\n          </div>    </div>\n\n        {/* <Screener /> */}\n\n\n        <Projects />\n        {/* <Example /> */}\n        {/* </NavigationContainer> */}\n        {/* <Nav /> */}\n\n\n      </>\n    );\n\n  }\n}","\nimport './App.css';\nimport { AppBar,Button,Toolbar,IconButton,Typography, withTheme } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: \"#8B939C\" ,\n      flexGrow: 1,\n      \n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    \n  }));\n\nfunction Nav() {\n    const classes = useStyles();\n  return (\n    <div className={classes.root} >\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon /> \n        </IconButton>*/}\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" href=\"/\">\n          Home\n        </IconButton>\n        {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          Resume\n        </IconButton> */}\n        \n      </Toolbar>\n    </AppBar>\n  </div>\n  );\n}\n\nexport default Nav;\n","import React, { PureComponent } from 'react';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis,ZAxis, CartesianGrid, Tooltip\n} from 'recharts';\n\nconst data = [\n  { x: 100, y: 200, z: 200 },\n  { x: 120, y: 100, z: 200 },\n  { x: 170, y: 300, z: 200 },\n  { x: 140, y: 250, z: 200 },\n  { x: 150, y: 400, z: 200 },\n  { x: 110, y: 280, z: 200 },\n];\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/uLysj0u2/';\n\n  render() {\n    return (\n      <ScatterChart\n        width={400}\n        height={400}\n        margin={{\n          top: 20, right: 20, bottom: 20, left: 20,\n        }}\n      >\n        <CartesianGrid />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" />\n        <YAxis type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" />\n        <ZAxis dataKey=\"z\" range={[64, 100]} name=\"score\" unit=\"km\" />\n        <Tooltip cursor={{ strokeDasharray: '9 3' }} />\n        <Scatter name=\"A school\" data={data} fill=\"#8884d8\" shape=\"square\" />\n      </ScatterChart>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport React, { Component } from \"react\";\nimport Grid from '@material-ui/core/Grid';\n\n\nexport default class Footer extends Component {\n    componentDidMount() {\n\n    }\n    render() {\n\n        return (\n            <>\n                <div id=\"footer\" >\n                    <div id=\"gridcontainer\">\n                        <Grid container\n                            direction=\"row\"\n                            justify=\"space-evenly\"\n                            alignItems=\"center\"\n                            spacing={2}>\n\n                            <Grid container item xs={12} md={6} sm={12} spacing={8} direction=\"column\"\n\n                                justify=\"space-evenly\"\n\n                                alignItems=\"center\"\n                            >\n                                <div id=\"contact-info\">\n                                    <h3>Contact Information</h3>\n                                    <p>Name: Will Shapiro</p>\n                                    <p>Email: willcshapiro@gmail.com</p>\n                                    <p>Phone: (347)-907-9209</p>\n                                    <a href=\"https://github.com/wcshapiro\">Github</a> <br></br><br></br>\n                                    <a href=\"https://www.linkedin.com/in/willcshapiro\">linkedIn</a>\n                                </div>\n\n                            </Grid>\n                            <Grid container item xs={12} md={6} sm={12} spacing={8} direction=\"column\"\n\n                                justify=\"space-evenly\"\n\n                                alignItems=\"center\"\n                            >\n                                <div id=\"contact-info\">\n                                    <h3>About Me</h3>\n                                    <p>\n                                        I'm a computer Science and Computer Engineering graduate of the University of Kentucky class of 2021.\n                                        I am currently looking for an entry-level position in the field of fintech, biotech, or web development (frontend or backend).\n                                </p>\n                                    <br>\n                                    </br>\n                                    <br>\n                                    </br>\n                                    <br>\n                                    </br>\n                                    <br>\n                                    </br>\n                                    <br>\n                                    </br>\n                                    <br>\n                                    </br>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </>\n        );\n\n    }\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Screener.css';\n\n\nexport default class Screener extends Component {\n    constructor(props) {\n        super(props);\n        this.baseURL = \"https://api.polygon.io/v2/reference/financials/\";\n        this.apiKey = \"?limit=5&apiKey=bUYSdcCHLTpySDiqbvRyHJAAqJ_YMfo55YA5a7\";\n        this.state = {\n            username: '',\n            ticker: 'ticker',\n            isLoaded: false,\n            items: null\n        };\n\n\n    }\n    mySubmitHandler = (event) => {\n\n        event.preventDefault();\n        fetch(this.baseURL + this.state.ticker + this.apiKey)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n\n            )\n\n\n    }\n    myChangeHandler = (event) => {\n        this.setState({ ticker: event.target.value });\n    }\n    render() {\n        console.log(\"checking load \" + this.state.isLoaded);\n        return (\n            <>\n                <form className=\"screener\" onSubmit={this.mySubmitHandler}>\n                    <h1>Searching for {this.state.ticker}</h1>\n                    <p>Enter your ticker, and submit:</p>\n                    <input\n                        type='text'\n                        onChange={this.myChangeHandler}\n                    />\n                    <input\n                        type='submit'\n                    />\n                </form>\n                <p> here is the stock info {this.state.isLoaded ? (\n                    <ul>\n                        <li>ticker: {this.state.items.results[0].ticker}</li>\n                        <li>cashAndEquivalents: {this.state.items.results[0].cashAndEquivalents}</li>\n                        <li>tradeAndNonTradeReceivables: {this.state.items.results[0].tradeAndNonTradeReceivables}</li>\n                        <li>inventory: {this.state.items.results[0].inventory}</li>\n                        <li>totalLiabilities: {this.state.items.results[0].totalLiabilities}</li>\n                        <li>marketCapitalization: {this.state.items.results[0].marketCapitalization}</li>\n                        <li>is it undervalued? {(\n                            parseInt(this.state.items.results[0].cashAndEquivalents) + .75 * parseInt(this.state.items.results[0].tradeAndNonTradeReceivables)\n                            + .5 * parseInt(this.state.items.results[0].inventory) - parseInt(this.state.items.results[0].totalLiabilities)\n                            > parseInt(this.state.items.results[0].marketCapitalization)\n\n                        ) ? (\"true\") : (\"false\")} at price per share {(parseInt(this.state.items.results[0].cashAndEquivalents) + .75 * parseInt(this.state.items.results[0].tradeAndNonTradeReceivables)\n                            + .5 * parseInt(this.state.items.results[0].inventory) - parseInt(this.state.items.results[0].totalLiabilities))} vs price{this.state.items.results[0].sharePriceAdjustedClose} </li>\n\n                    </ul>) :\n                    <p>Nothing here yet</p>}\n\n                </p>\n            </>\n\n\n        );\n    }\n}\n// (cash & short-term investments + 75% * accounts receivable + 50% * inventory) minus total liabilities.\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport './Projects.css';\nimport firestore from \"./firestore\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Nav from './Nav'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\nexport default function ProjectPage() {\n  return (<>\n    <Nav />\n    <Child />\n  </>\n  );\n}\n\nfunction Child() {\n  const classes = useStyles();\n\n  var cardStyles = {\n    backgroundColor: \"#DEE0E3\", height: \"150px\", width: \"150px\"\n  }\n  const [title, setTitle] = useState();\n  const [img, setImg] = useState();\n  const [desc, setDesc] = useState(new Array());\n  const [tech, setTech] = useState(new Array());\n  const [date, setDate] = useState();\n  const [endDate, setEndDate] = useState();\n  const [employer, setEmployer] = useState();\n  const db = firebase.firestore();\n\n\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id, type } = useParams();\n  useEffect(() => {\n    let mounted = true;\n    db.collection(type == 'personal' ? 'personalProjects' : 'workProjects')\n      .doc(id)\n      .get()\n      .then(doc => {\n        if (mounted) {\n          const data = doc.data();\n          if (type == 'personal') {\n            setTitle(data.name);\n\n          }\n          else {\n            setTitle(data.title);\n            setEmployer(data.employer);\n\n          }\n          setImg(data.img);\n          setDesc(data.description);\n          setTech(data.technologies);\n          setEndDate(data.date.endDate);\n          setDate(data.date.startDate);\n        };\n      });\n  }, []);\n\n\n\n  return (\n    <>\n      <img id=\"jobImg\" alt=\"\" src={img} ></img>\n      <div id=\"mainDiv\" >\n\n        <h3 id=\"jobTitle\">{title}</h3>\n        <h3 id=\"jobDate\">{date} - {endDate}</h3>\n        <h3 id=\"jobEmployer\">{employer ? employer : ''}</h3>\n        <div id=\"jobDesc\">{desc.map((key, value) => (\n          <>\n            <p>{key}</p>\n            <br></br>\n          </>\n        ))}</div>\n        <div id=\"TechDiv\">\n          <h3 id=\"techHead\">Technologies Used</h3>\n          <div>\n            \n              <ul id=\"jobTech\">{tech.map((key, value) => (\n                <>\n                  \n                        <li>{key}</li>\n                      \n\n                </>\n              ))\n              }</ul>\n            \n          </div>\n        </div>\n      </div>\n    </>\n  );\n}","import React from 'react';\nimport App from './App';\nimport Graph from './Graph';\n// import { About } from './views/About';\n// import { NavBar } from './components/NavBar';\nimport Projects from './Projects';\nimport ProjectPage from './ProjectPage'\nimport { Route, Switch, Redirect} from 'react-router-dom';\n\nexport const Routes = () => {\n  return (\n    <div>\n      <Switch>\n      <Route exact path=\"/projects\" component={Projects} />\n        <Route exact path=\"/projects/:type/:id\" component={ProjectPage} />\n        <Route exact path=\"/ca\" component={Graph} />\n        <Route exact path=\"/\">\n          <Redirect to=\"/Home\" />\n        </Route>\n        <Route exact path=\"/Home\" component={App} />\n      </Switch>\n    </div>\n  );\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Nav from './Nav';\nimport Example from './RechartsGraph';\nimport Graph from './Graph';\nimport Projects from './Projects'\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase\";\nimport Screener from './Screener'\nimport { HashRouter as Router } from 'react-router-dom';\nimport Footer from './Footer'\n\nimport { Routes } from './routes'; // where we are going to specify our routes\n// import { NavigationContainer } from '@react-navigation/native';\n// import 'react-native-gesture-handler';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n    <Routes />\n\n  </Router>\n  <Footer/>\n\n    \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//     <Nav />\n"],"sourceRoot":""}