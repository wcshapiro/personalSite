[{"/Users/willshapiro/Documents/development/personalSite/personal-site/src/App.js":"1","/Users/willshapiro/Documents/development/personalSite/personal-site/src/index.js":"2","/Users/willshapiro/Documents/development/personalSite/personal-site/src/Nav.js":"3","/Users/willshapiro/Documents/development/personalSite/personal-site/src/reportWebVitals.js":"4","/Users/willshapiro/Documents/development/personalSite/personal-site/src/Graph.js":"5","/Users/willshapiro/Documents/development/personalSite/personal-site/src/RechartsGraph.js":"6","/Users/willshapiro/Documents/development/personalSite/personal-site/src/Projects.js":"7","/Users/willshapiro/Documents/development/personalSite/personal-site/src/Firestore.js":"8","/Users/willshapiro/Documents/development/personalSite/personal-site/src/firestore.js":"9","/Users/willshapiro/Documents/development/personalSite/personal-site/src/Screener.js":"10","/Users/willshapiro/Documents/development/personalSite/personal-site/src/routes.js":"11","/Users/willshapiro/Documents/development/personalSite/personal-site/src/ProjectPage.js":"12","/Users/willshapiro/Documents/development/personalSite/personal-site/src/Footer.js":"13"},{"size":795,"mtime":1613252018014,"results":"14","hashOfConfig":"15"},{"size":1039,"mtime":1613615819980,"results":"16","hashOfConfig":"15"},{"size":1144,"mtime":1613610469798,"results":"17","hashOfConfig":"15"},{"size":362,"mtime":1606533395460,"results":"18","hashOfConfig":"15"},{"size":7779,"mtime":1611002566426,"results":"19","hashOfConfig":"15"},{"size":1044,"mtime":1607483385460,"results":"20","hashOfConfig":"15"},{"size":7081,"mtime":1613077196973,"results":"21","hashOfConfig":"15"},{"size":478,"mtime":1607486776297,"results":"22","hashOfConfig":"15"},{"size":478,"mtime":1607486776297,"results":"23","hashOfConfig":"15"},{"size":3742,"mtime":1608609656431,"results":"24","hashOfConfig":"15"},{"size":730,"mtime":1613271659043,"results":"25","hashOfConfig":"15"},{"size":3152,"mtime":1613250999324,"results":"26","hashOfConfig":"15"},{"size":2624,"mtime":1613269930548,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"xuytyd",{"filePath":"30","messages":"31","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/willshapiro/Documents/development/personalSite/personal-site/src/App.js",["58","59"],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/index.js",["60","61","62","63","64","65","66"],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/Nav.js",["67","68","69","70"],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/reportWebVitals.js",[],["71","72"],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/Graph.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97"],"import React, { Component } from \"react\";\nimport Plot from 'react-plotly.js'\nimport Sketch from \"react-p5\";\nimport './index.css';\nimport { react } from \"plotly.js\";\nimport { FilledInput } from \"@material-ui/core\";\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip\n} from 'recharts';\n\n\nclass Cell {\n    constructor(health, genome, type) {\n        this.type = type;\n        this.health = health;\n        this.genome = genome;\n\n    }\n}\nclass Cake {\n    constructor(size, health, type) {\n        this.type = type;\n        this.size = size;\n        this.health = health;\n    }\n\n}\n\nfunction addCake(grid) {\n    let count = 0;\n    for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[0].length; j++) {\n            let cake = new Cake(1, 1, \"food\");\n            if (Math.random() < .05) {\n                grid[i][j] = cake;\n                count += 1;\n\n            }\n        }\n    }\n    console.log(\"returning \" + count + \"cakes\");\n\n    return count;\n}\n\nfunction make3DArray(cols, rows) {\n    let arr = new Array(cols);\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = new Array(rows);\n    }\n    return arr;\n}\nfunction getDimensions() {\n    height = window.innerHeight;\n    width = window.innerWidth;\n    return [width, height]\n}\nfunction countNeighbors(grid, x, y) {\n    let sum = 0;\n    for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n            let col = (x + i + cols) % cols;\n            let row = (y + j + rows) % rows;\n            sum += grid[col][row].health;\n        }\n    }\n    sum -= grid[x][y].health;\n    return sum;\n}\nfunction consume(grid, x, y, cellx, celly) {\n    if (grid[cellx][celly].type != 'cell') { return false; }\n    else {\n        if ((grid[x][y].size >= grid[cellx][celly].genome)) {\n            // console.log(\"food too big\");\n            return false;\n        }\n        else {\n            // console.log('eats food ' + grid[x][y].size + \" > \" + grid[cellx][celly].genome);\n            // console.log('eats food ' + grid[x][y].type + \" vs \" + grid[cellx][celly].type);\n            return true;\n        }\n\n    }\n}\nfunction delay(i) {\n    setTimeout(function () {\n        // Add tasks to do \n    }, 2000 * i);\n}\nfunction hunt(grid, x, y, p5) {\n    let count = 0;\n    for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n            let col = (x + i + cols) % cols;\n            let row = (y + j + rows) % rows;\n\n            if (grid[col][row].type == \"food\") {\n                if (consume(grid, col, row, x, y)) {\n                    grid[col][row] = new Cell(0, 1, \"food\");\n                    p5.fill('blue');\n                    p5.stroke(0);\n                    p5.rect(col * resolution, row * resolution, resolution - 1, resolution - 1);\n                    count += 1;\n\n                }\n            }\n        }\n    }\n    return count;\n\n}\nfunction countElements(grid) {\n    let sum = 0;\n    for (let i = 0; i < grid.length; i++) {\n        for (let j = 0; j < grid[0].length; j++) {\n            sum += grid[i][j].health;\n        }\n    }\n    return sum;\n}\n\nlet liveGrid;\nlet grid;\nlet cols;\nlet rows;\nlet oldCount = 0;\nlet elementCount = 0;\nlet resolution = 10;\nlet height = Math.floor(window.innerHeight);\nlet width = Math.floor(window.clientW);\nlet cakeCount = 0;\n\nexport default (props) => {\n    const setup = (p5, canvasParentRef) => {\n        let dimensions = getDimensions();\n        console.log(\"dimensions are width: \" + Math.round(dimensions[0] / 10) * 10 + \" height: \" + Math.round(dimensions[1] / 10) * 10)\n        console.log(\"height \" + Math.round(dimensions[1]));\n        p5.createCanvas(1920, 900).parent(canvasParentRef);\n        cols = p5.width / resolution;\n        rows = p5.height / resolution;\n        grid = make3DArray(cols, rows);\n\n        for (let i = 0; i < cols; i++) {\n            for (let j = 0; j < rows; j++) {\n                let newCell = new Cell(Math.round(Math.random()), 1, \"cell\")\n                grid[i][j] = newCell;\n            }\n        }\n        cakeCount = addCake(grid);\n        console.log(\"done adding cake with \" + cakeCount + \" cakes\");\n    };\n\n\n    const draw = (p5) => {\n        p5.background(0);\n        for (let i = 0; i < cols; i++) {\n            for (let j = 0; j < rows; j++) {\n                let x = i * resolution;\n                let y = j * resolution;\n                if (grid[i][j].health == 1 && grid[i][j].type == \"cell\") {\n                    p5.fill(160); // changed for aesthetics\n                    p5.stroke(0);\n                    p5.rect(x, y, resolution - 1, resolution - 1);\n                }\n                else if (grid[i][j].type == \"food\") {\n                    p5.fill('#fae');\n                    p5.stroke(0);\n                    p5.rect(x, y, resolution - 1, resolution - 1);\n                }\n            }\n        }\n\n\n        let next = make3DArray(cols, rows);\n        // let txt = p5.createDiv(\"testing \" + cakeCount);\n\n        // Compute next based on grid\n        for (let i = 0; i < cols; i++) {\n            for (let j = 0; j < rows; j++) {\n                next[i][j] = new Cell(null, 1, \"cell\");\n                let state = grid[i][j];\n                // Count live neighbors!\n                let sum = 0;\n                let neighbors = countNeighbors(grid, i, j);\n                cakeCount -= hunt(grid, i, j, p5);\n\n\n\n                // txt.position(1600, 50);\n                // console.log(cakeCount);\n                if (state.type == \"cell\") {\n                    if (state.health == 0 && neighbors == 3) { //birth\n                        next[i][j].health = 1;\n                        next[i][j].genome = (Math.random() < .004) ? next[i][j].genome + 0.1 : 1;\n                    } else if (state.health < 0 || (neighbors < 2 || neighbors > 3)) { //death\n                        next[i][j].health = 0;\n                    }\n                    else {\n                        next[i][j] = state;\n                        // next[i][j].health = next[i][j].health-.000000001;\n                    }\n                    // next[i][j].health = next[i][j].health-.000000001;\n                }\n                else {\n                    next[i][j] = state;\n                }\n            }\n\n        }\n\n        grid = next;\n\n\n\n\n        oldCount = elementCount;\n        elementCount = countElements(grid, cols, rows);\n\n\n        if (elementCount == oldCount && (elementCount < 1200)) {\n            grid = make3DArray(cols, rows);\n\n\n            for (let i = 0; i < cols; i++) {\n                for (let j = 0; j < rows; j++) {\n                    let newCell = new Cell(Math.round(Math.random()), -1, \"cell\");\n                    grid[i][j] = newCell;\n                }\n            }\n            cakeCount = addCake(grid);\n\n        }\n\n    };\n\n    const data = [\n        { x: 100, y: 200, z: 200 },\n        { x: 120, y: 100, z: 200 },\n        { x: 170, y: 300, z: 200 },\n        { x: 140, y: 250, z: 200 },\n        { x: 150, y: 400, z: 200 },\n        { x: 110, y: 280, z: 200 },\n    ];\n\n    return (<>\n        <div className=\"ca-container\">\n        \n            <Sketch className=\"ca-box\" setup={setup} draw={draw} />\n            <div className=\"fading-container\">\n            </div>\n            \n        </div>\n        {/* <ScatterChart\n        width={400}\n        height={400}\n        margin={{\n          top: 20, right: 20, bottom: 20, left: 20,\n        }}\n      >\n        <CartesianGrid />\n        <XAxis type=\"number\" dataKey=\"x\" name=\"sup ho\" unit=\"cm\" />\n        <YAxis type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" />\n        <ZAxis dataKey=\"z\" range={[64, 100]} name=\"score\" unit=\"km\" />\n        <Tooltip cursor={{ strokeDasharray: '9 3' }} />\n        <Scatter name=\"A school\" data={data} fill=\"#8884d8\" shape=\"square\"  />\n      </ScatterChart> */}\n    </>);\n};","/Users/willshapiro/Documents/development/personalSite/personal-site/src/RechartsGraph.js",[],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/Projects.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport './Projects.css';\nimport firestore from \"./firestore\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Paper from '@material-ui/core/Paper';\nimport { colors } from \"@material-ui/core\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect,\n    Link,\n    useRouteMatch,\n} from \"react-router-dom\";\nconst database = firebase.firestore();\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        height: 140,\n        width: 100,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst Projects = () => {\n    const [spacing, setSpacing] = React.useState(2);\n    var cardStyles = { backgroundColor: \"#DEE0E3\", height: \"400px\", width: \"600px\" }\n    const classes = useStyles();\n    const [projects, setProjects] = useState([]);\n    const [projects2, setProjects2] = useState([]);\n    const [error, setError] = useState();\n\n    useEffect(() => {\n        let mounted = true;\n        let mounted2 = true;\n        database.collection('personalProjects').get()\n            .then(response => {\n\n                if(mounted){\n                    \n                \n                const fetchedProjects = [];\n\n\n\n                response.docs.forEach(document => {\n                    const fetchedProject = {\n                        id: document.id,\n                        ...document.data()\n                    };\n                    fetchedProjects.push(fetchedProject);\n                });\n                setProjects(fetchedProjects);\n                console.log(\"these are projects\" + setProjects);\n\n\n\n                database.collection('workProjects').get().then(response2 => {\n                    if(mounted2){\n                    const fetchedProjects2 = [];\n                    response2.docs.forEach(document2 => {\n\n                        const fetchedProject2 = {\n                            id: document2.id,\n                            ...document2.data()\n                        };\n                        console.log(\"this is doc2\" + fetchedProject2)\n                        fetchedProjects2.push(fetchedProject2);\n                    });\n                    setProjects2(fetchedProjects2);\n                    console.log(\"these are projects2\" + setProjects2);}\n                })\n\n    }});\n            return () => {mounted = false;\n                mounted2 = false;};\n    }, []);\n\n    return (\n\n        <>\n\n            <div className=\"projects-background\">\n\n                <Grid container className={classes.root}\n                    direction=\"row\"\n                    justify=\"space-evenly\"\n                    alignItems=\"center\"\n                    spacing={2}>\n\n                    <Grid container item xs={12} md={6} sm={12} className={classes.root} spacing={8} direction=\"column\"\n\n                        justify=\"space-evenly\"\n\n                        alignItems=\"center\"\n                    >\n\n                        <h1 className=\"personal-projects\">Personal Projects</h1>\n                        {error ? (\n                            <p>Oops, there is an error </p>\n                        ) : null}\n\n                        {projects.map(project => (<>\n\n                            <Grid item >\n                                <Link to={'/projects/personal/' + project.id} style={{ textDecoration: 'none' }}>\n                                    <Card id=\"personal-card\" className={classes.root} style={cardStyles} elevation={4}\n                                    >\n                                        <CardMedia\n\n                                            component=\"img\"\n                                            alt=\"Contemplative Reptile\"\n                                            height=\"300\"\n                                            image={project.img}\n                                            title=\"Contemplative Reptile\"\n                                        />\n                                        <CardContent>\n\n                                            <h2 ><strong>{project.name}</strong></h2>\n\n\n                                            {/* <h3>{project.date.startDate} - {project.date.endDate}</h3> \n                                        <ul >{project.description.map(bullet => (<li>{bullet}\n                                        </li>))}</ul>\n                                        {/* <ul>{project.technologies.map(technology => (\n                                            <p>{technology}</p>\n\n                                        ))}</ul> */}\n                                        </CardContent>\n                                    </Card>\n                                </Link>\n                            </Grid>\n\n                        </>\n                        ))}\n                    </Grid>\n\n                    <Grid container item xs={12} md={6} sm={12} className={classes.root} spacing={8} direction=\"column\"\n                        justify=\"space-evenly\"\n                        alignItems=\"center\">\n                        <h1 className=\"work-projects\">Work Projects</h1>\n                        {error ? (\n                            <p>Oops, there is an error </p>\n                        ) : null}\n                        {projects2.map(project2 => (<>\n                            <Grid item >\n                                <Link to={'/projects/work/' + project2.id} style={{ textDecoration: 'none' }}>\n\n                                    <Card id=\"work-card\" className={classes.root} style={cardStyles} elevation={4}>\n                                        <CardMedia\n                                            component=\"img\"\n                                            alt=\"Project Image\"\n                                            height=\"300\"\n                                            image={project2.img}\n                                            title=\"Project Image\"\n                                        />\n                                        <CardContent>\n                                            <h2><strong>{project2.title}</strong></h2>\n                                        </CardContent>\n                                    </Card>\n                                </Link>\n                            </Grid>\n                        </>\n                        ))}\n                    </Grid>\n                </Grid >\n            </div>\n        </>\n\n    );\n}\n\nexport default Projects;","/Users/willshapiro/Documents/development/personalSite/personal-site/src/Firestore.js",[],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/firestore.js",[],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/Screener.js",["116"],"import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Screener.css';\n\n\nexport default class Screener extends Component {\n    constructor(props) {\n        super(props);\n        this.baseURL = \"https://api.polygon.io/v2/reference/financials/\";\n        this.apiKey = \"?limit=5&apiKey=bUYSdcCHLTpySDiqbvRyHJAAqJ_YMfo55YA5a7\";\n        this.state = {\n            username: '',\n            ticker: 'ticker',\n            isLoaded: false,\n            items: null\n        };\n\n\n    }\n    mySubmitHandler = (event) => {\n\n        event.preventDefault();\n        fetch(this.baseURL + this.state.ticker + this.apiKey)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    console.log(result);\n                    this.setState({\n                        isLoaded: true,\n                        items: result\n                    });\n                },\n                // Note: it's important to handle errors here\n                // instead of a catch() block so that we don't swallow\n                // exceptions from actual bugs in components.\n                (error) => {\n\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n\n            )\n\n\n    }\n    myChangeHandler = (event) => {\n        this.setState({ ticker: event.target.value });\n    }\n    render() {\n        console.log(\"checking load \" + this.state.isLoaded);\n        return (\n            <>\n                <form className=\"screener\" onSubmit={this.mySubmitHandler}>\n                    <h1>Searching for {this.state.ticker}</h1>\n                    <p>Enter your ticker, and submit:</p>\n                    <input\n                        type='text'\n                        onChange={this.myChangeHandler}\n                    />\n                    <input\n                        type='submit'\n                    />\n                </form>\n                <p> here is the stock info {this.state.isLoaded ? (\n                    <ul>\n                        <li>ticker: {this.state.items.results[0].ticker}</li>\n                        <li>cashAndEquivalents: {this.state.items.results[0].cashAndEquivalents}</li>\n                        <li>tradeAndNonTradeReceivables: {this.state.items.results[0].tradeAndNonTradeReceivables}</li>\n                        <li>inventory: {this.state.items.results[0].inventory}</li>\n                        <li>totalLiabilities: {this.state.items.results[0].totalLiabilities}</li>\n                        <li>marketCapitalization: {this.state.items.results[0].marketCapitalization}</li>\n                        <li>is it undervalued? {(\n                            parseInt(this.state.items.results[0].cashAndEquivalents) + .75 * parseInt(this.state.items.results[0].tradeAndNonTradeReceivables)\n                            + .5 * parseInt(this.state.items.results[0].inventory) - parseInt(this.state.items.results[0].totalLiabilities)\n                            > parseInt(this.state.items.results[0].marketCapitalization)\n\n                        ) ? (\"true\") : (\"false\")} at price per share {(parseInt(this.state.items.results[0].cashAndEquivalents) + .75 * parseInt(this.state.items.results[0].tradeAndNonTradeReceivables)\n                            + .5 * parseInt(this.state.items.results[0].inventory) - parseInt(this.state.items.results[0].totalLiabilities))} vs price{this.state.items.results[0].sharePriceAdjustedClose} </li>\n\n                    </ul>) :\n                    <p>Nothing here yet</p>}\n\n                </p>\n            </>\n\n\n        );\n    }\n}\n// (cash & short-term investments + 75% * accounts receivable + 50% * inventory) minus total liabilities.\n","/Users/willshapiro/Documents/development/personalSite/personal-site/src/routes.js",[],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/ProjectPage.js",["117","118","119","120","121","122","123","124","125","126"],"/Users/willshapiro/Documents/development/personalSite/personal-site/src/Footer.js",[],{"ruleId":"127","severity":1,"message":"128","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":14},{"ruleId":"127","severity":1,"message":"131","line":10,"column":11,"nodeType":"129","messageId":"130","endLine":10,"endColumn":20},{"ruleId":"127","severity":1,"message":"132","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":11},{"ruleId":"127","severity":1,"message":"133","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":11},{"ruleId":"127","severity":1,"message":"134","line":6,"column":8,"nodeType":"129","messageId":"130","endLine":6,"endColumn":15},{"ruleId":"127","severity":1,"message":"135","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":13},{"ruleId":"127","severity":1,"message":"136","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":16},{"ruleId":"127","severity":1,"message":"138","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":16},{"ruleId":"127","severity":1,"message":"139","line":3,"column":17,"nodeType":"129","messageId":"130","endLine":3,"endColumn":23},{"ruleId":"127","severity":1,"message":"140","line":3,"column":43,"nodeType":"129","messageId":"130","endLine":3,"endColumn":53},{"ruleId":"127","severity":1,"message":"141","line":3,"column":55,"nodeType":"129","messageId":"130","endLine":3,"endColumn":64},{"ruleId":"127","severity":1,"message":"142","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":16},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"127","severity":1,"message":"147","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"148","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"127","severity":1,"message":"149","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":15},{"ruleId":"127","severity":1,"message":"150","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":21},{"ruleId":"127","severity":1,"message":"151","line":8,"column":5,"nodeType":"129","messageId":"130","endLine":8,"endColumn":17},{"ruleId":"127","severity":1,"message":"152","line":8,"column":19,"nodeType":"129","messageId":"130","endLine":8,"endColumn":26},{"ruleId":"127","severity":1,"message":"153","line":8,"column":28,"nodeType":"129","messageId":"130","endLine":8,"endColumn":33},{"ruleId":"127","severity":1,"message":"154","line":8,"column":35,"nodeType":"129","messageId":"130","endLine":8,"endColumn":40},{"ruleId":"127","severity":1,"message":"155","line":8,"column":42,"nodeType":"129","messageId":"130","endLine":8,"endColumn":47},{"ruleId":"127","severity":1,"message":"156","line":8,"column":49,"nodeType":"129","messageId":"130","endLine":8,"endColumn":62},{"ruleId":"127","severity":1,"message":"157","line":8,"column":64,"nodeType":"129","messageId":"130","endLine":8,"endColumn":71},{"ruleId":"158","severity":1,"message":"159","line":71,"column":33,"nodeType":"160","messageId":"161","endLine":71,"endColumn":35},{"ruleId":"127","severity":1,"message":"162","line":85,"column":10,"nodeType":"129","messageId":"130","endLine":85,"endColumn":15},{"ruleId":"158","severity":1,"message":"163","line":97,"column":37,"nodeType":"160","messageId":"161","endLine":97,"endColumn":39},{"ruleId":"127","severity":1,"message":"164","line":122,"column":5,"nodeType":"129","messageId":"130","endLine":122,"endColumn":13},{"ruleId":"165","severity":1,"message":"166","line":133,"column":1,"nodeType":"167","endLine":268,"endColumn":3},{"ruleId":"158","severity":1,"message":"163","line":160,"column":39,"nodeType":"160","messageId":"161","endLine":160,"endColumn":41},{"ruleId":"158","severity":1,"message":"163","line":160,"column":63,"nodeType":"160","messageId":"161","endLine":160,"endColumn":65},{"ruleId":"158","severity":1,"message":"163","line":165,"column":42,"nodeType":"160","messageId":"161","endLine":165,"endColumn":44},{"ruleId":"127","severity":1,"message":"168","line":183,"column":21,"nodeType":"129","messageId":"130","endLine":183,"endColumn":24},{"ruleId":"158","severity":1,"message":"163","line":191,"column":32,"nodeType":"160","messageId":"161","endLine":191,"endColumn":34},{"ruleId":"158","severity":1,"message":"163","line":192,"column":38,"nodeType":"160","messageId":"161","endLine":192,"endColumn":40},{"ruleId":"158","severity":1,"message":"163","line":192,"column":56,"nodeType":"160","messageId":"161","endLine":192,"endColumn":58},{"ruleId":"158","severity":1,"message":"163","line":220,"column":26,"nodeType":"160","messageId":"161","endLine":220,"endColumn":28},{"ruleId":"127","severity":1,"message":"169","line":236,"column":11,"nodeType":"129","messageId":"130","endLine":236,"endColumn":15},{"ruleId":"127","severity":1,"message":"170","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":17},{"ruleId":"127","severity":1,"message":"171","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":17},{"ruleId":"127","severity":1,"message":"172","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":24},{"ruleId":"127","severity":1,"message":"173","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":18},{"ruleId":"127","severity":1,"message":"174","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":13},{"ruleId":"127","severity":1,"message":"175","line":12,"column":8,"nodeType":"129","messageId":"130","endLine":12,"endColumn":19},{"ruleId":"127","severity":1,"message":"139","line":14,"column":8,"nodeType":"129","messageId":"130","endLine":14,"endColumn":14},{"ruleId":"127","severity":1,"message":"140","line":15,"column":8,"nodeType":"129","messageId":"130","endLine":15,"endColumn":18},{"ruleId":"127","severity":1,"message":"176","line":17,"column":8,"nodeType":"129","messageId":"130","endLine":17,"endColumn":13},{"ruleId":"127","severity":1,"message":"177","line":18,"column":10,"nodeType":"129","messageId":"130","endLine":18,"endColumn":16},{"ruleId":"127","severity":1,"message":"178","line":20,"column":22,"nodeType":"129","messageId":"130","endLine":20,"endColumn":28},{"ruleId":"127","severity":1,"message":"179","line":21,"column":5,"nodeType":"129","messageId":"130","endLine":21,"endColumn":10},{"ruleId":"127","severity":1,"message":"180","line":22,"column":5,"nodeType":"129","messageId":"130","endLine":22,"endColumn":11},{"ruleId":"127","severity":1,"message":"181","line":23,"column":5,"nodeType":"129","messageId":"130","endLine":23,"endColumn":13},{"ruleId":"127","severity":1,"message":"182","line":25,"column":5,"nodeType":"129","messageId":"130","endLine":25,"endColumn":18},{"ruleId":"127","severity":1,"message":"183","line":44,"column":12,"nodeType":"129","messageId":"130","endLine":44,"endColumn":19},{"ruleId":"127","severity":1,"message":"184","line":44,"column":21,"nodeType":"129","messageId":"130","endLine":44,"endColumn":31},{"ruleId":"127","severity":1,"message":"185","line":49,"column":19,"nodeType":"129","messageId":"130","endLine":49,"endColumn":27},{"ruleId":"127","severity":1,"message":"186","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":16},{"ruleId":"127","severity":1,"message":"170","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":17},{"ruleId":"127","severity":1,"message":"178","line":14,"column":20,"nodeType":"129","messageId":"130","endLine":14,"endColumn":26},{"ruleId":"127","severity":1,"message":"180","line":15,"column":3,"nodeType":"129","messageId":"130","endLine":15,"endColumn":9},{"ruleId":"127","severity":1,"message":"179","line":16,"column":3,"nodeType":"129","messageId":"130","endLine":16,"endColumn":8},{"ruleId":"127","severity":1,"message":"187","line":17,"column":3,"nodeType":"129","messageId":"130","endLine":17,"endColumn":7},{"ruleId":"188","severity":1,"message":"189","line":49,"column":36,"nodeType":"190","messageId":"191","endLine":49,"endColumn":47},{"ruleId":"188","severity":1,"message":"189","line":50,"column":36,"nodeType":"190","messageId":"191","endLine":50,"endColumn":47},{"ruleId":"158","severity":1,"message":"163","line":62,"column":24,"nodeType":"160","messageId":"161","endLine":62,"endColumn":26},{"ruleId":"158","severity":1,"message":"163","line":68,"column":20,"nodeType":"160","messageId":"161","endLine":68,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":84,"column":6,"nodeType":"194","endLine":84,"endColumn":8,"suggestions":"195"},"no-unused-vars","'init' is defined but never used.","Identifier","unusedVar","'myElement' is assigned a value but never used.","'App' is defined but never used.","'Nav' is defined but never used.","'Example' is defined but never used.","'Graph' is defined but never used.","'Projects' is defined but never used.","'firebase' is defined but never used.","'Screener' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'withTheme' is defined but never used.","'MenuIcon' is defined but never used.","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"'Component' is defined but never used.","'Plot' is defined but never used.","'react' is defined but never used.","'FilledInput' is defined but never used.","'ScatterChart' is defined but never used.","'Scatter' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'ZAxis' is defined but never used.","'CartesianGrid' is defined but never used.","'Tooltip' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'delay' is defined but never used.","Expected '===' and instead saw '=='.","'liveGrid' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'sum' is assigned a value but never used.","'data' is assigned a value but never used.","'firestore' is defined but never used.","'FormLabel' is defined but never used.","'FormControlLabel' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'CardActions' is defined but never used.","'Paper' is defined but never used.","'colors' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'useRouteMatch' is defined but never used.","'spacing' is assigned a value but never used.","'setSpacing' is assigned a value but never used.","'setError' is assigned a value but never used.","'ReactDOM' is defined but never used.","'Link' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'db', 'id', and 'type'. Either include them or remove the dependency array.","ArrayExpression",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [db, id, type]",{"range":"201","text":"202"},[2024,2026],"[db, id, type]"]